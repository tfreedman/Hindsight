<article class="cf">
  <%= render 'application/aside' %>
  <section class="items right">
    <table>
      <tr>
        <th>&nbsp;</th>
        <% alternate_time_zones(@date).each_with_index do |zone, index| %>
          <th style="left: <%= (index + 1) * 144 %>px">&nbsp;</th>
        <% end %>
        <th><div style="width: 20px"></div></th>
        <% @event_groups.each do |key, value| %>
          <th><%= friendly_groups(key) %></th>
        <% end %>
        <th>&nbsp;</th>
      </tr>
      <% even = true %>
      <% @hours.each do |key, hour| %>
          <% even = !even %>
          <tr class="<% if even %>even<% else %>odd<% end %>">
            <%= render 'application/time', epoch: key, location: Hindsight::Application.credentials.default_location, show_weather: true, in_time_zone: Hindsight::Application.credentials.default_time_zone, show_time_zone: true, index: 0 %>
            <% alternate_time_zones(@date).each_with_index do |zone, index| %>
              <%= render 'application/time', epoch: key, location: zone.formatted_name, show_weather: true, in_time_zone: zone.tz, show_time_zone: true, index: index + 1 %>
            <% end %>
            <% 0.upto(@event_groups.length + 1).each_with_index do |i| %>
              <td></td>
            <% end %>
          </tr>
          <% hour.each do |event| %>
            <tr class="<%= event[:type].gsub(' ', '_') %> <% if even %>even<% else %>odd<% end %>">
              <%= render 'application/time', epoch: event[:sort_time], show_weather: false, in_time_zone: Hindsight::Application.credentials.default_time_zone, show_time_zone: false, index: 0 %>
              <% alternate_time_zones(@date).each_with_index do |zone, index| %>
                <%= render 'application/time', epoch: event[:sort_time], show_weather: false, in_time_zone: zone.tz, show_time_zone: false, index: index + 1 %>
              <% end %>
              <td>&nbsp;</td>
              <% 0.upto(@event_groups[event[:type]] - 1).each_with_index do |i| %>
                <td></td>
              <% end %>
              <td class="details" style="<% if colors(event[:type]) %>border-color: <%= colors(event[:type]) %>;<% end %> <% if colors(event[:type]) == 'transparent' %> border-top-color: <%= colors2(@event_groups[event[:type]]) %>;<% end %>" <% if event[:group] %>data-group="<%= event[:group] %>"<% end %> <% if colors(event[:type]) == "transparent" %>data-column="<%= @event_groups[event[:type]] %>"<% end %>>
                <% if event[:type] == "presto_trip" %>
                  <%= render 'application/presto_trip', event: event %>
                <% elsif event[:type] == "Fitbit" %>
                  <%= render 'application/fitbit', event: event %>
                <% elsif event[:type] == "forum_post" %>
                  <%= render 'application/forum_post', event: event %>          
                <% elsif event[:type] == "github_commit" %>
                  <%= render 'application/github_commit', event: event %>
                <% elsif event[:type] == "Photo Albums" %>
                  <%= render 'application/photo_album', event: event %>
                <% elsif event[:type].start_with?("matrix_event") %>
                  <%= render 'application/matrix_event', post: event, color: colors2(@event_groups[event[:type]]) %>
                <% elsif event[:type] == "bikeshare_trip" %>
                  <%= render 'application/bikeshare_trip', event: event %>
                <% elsif event[:type].start_with?("facebook_message") %>
                  <%= render 'application/facebook_message', event: event %>
                <% elsif event[:type].start_with?("adium_message") %>
                  <%= render 'application/adium_message', event: event %>
                <% elsif event[:type].start_with?("pidgin_message") %>
                  <%= render 'application/pidgin_message', event: event %>
                <% elsif event[:type].start_with?("google_chat_message_", "google_talk_message_") %>
                  <%= render 'application/google_chat_message', event: event %>
                <% elsif event[:type].start_with?("mirc_log_", "lounge_log_", "xchat_log_") %>
                  <%= render 'application/irc_log', event: event %>
                <% elsif event[:type].start_with?("skype_message_") %>
                  <%= render 'application/skype_message', event: event %>
                <% elsif event[:type].start_with?("sociallink") %>
                  <% if event[:sub_type] == 'youtube_video' %>
                    <%= render 'application/youtube_video', event: event %>
                  <% elsif event[:sub_type] == "deviantart_post" %>
                    <%= render 'application/deviantart_post', event: event %>
                  <% elsif event[:sub_type] == "pixiv_post" %>
                    <%= render 'application/pixiv_post', event: event %>
                  <% elsif event[:sub_type] == "webcomic_strip" %>
                    <%= render 'application/webcomic_strip', event: event %>
                  <% elsif event[:sub_type] == "instagram_post" %>
                    <%= render 'application/instagram_post', event: event %>
                  <% elsif event[:sub_type] == "twitter_tweet" %>
                    <%= render 'application/twitter_tweet', event: event %>
                  <% end %>
                <% elsif event[:type].start_with?("email_message") %>
                  <%= render 'application/email_message', event: event %>
                <% elsif event[:type].start_with?("windows_phone_sms_") %>
                  <%= render 'application/windows_phone_sms', event: event %>
                <% elsif event[:type] == "android_call" %>
                  <%= render 'application/android_call', event: event %>
                <% elsif event[:type].start_with?("android_sms_") %>
                  <%= render 'application/android_sms', event: event %>
                <% elsif event[:type].start_with?("voipms_sms_") %>
                  <%= render 'application/voipms_sms', event: event %>
                <% elsif event[:type].start_with?("calendar_event") %>
                  <%= render 'application/calendar_event', event: event %>
                <% elsif event[:type].start_with?("hangouts_event_") %>
                  <%= render 'application/hangouts_event', event: event %>
                <% elsif event[:type].start_with?('hindsight_file') %>
                  <%= render 'application/hindsight_file', event: event %>
                <% elsif event[:type] == 'Photos' %>
                  <%= render 'application/photos', event: event %>
                <% else %>
                  <%= event[:type] %>
                <% end %>
              </td>
              <% (@event_groups[event[:type]] + 1).upto(@event_groups.length).each_with_index do |i| %>
                <td></td>
              <% end %>
            </tr>
          <% end %>
    <% end %>
    </table>
  </section>
</article>
<script>
  function redraw() {
    details = document.querySelectorAll('.details');
    for (var i = 0; i < details.length; i++) {
      if (typeof details[i].dataset.group !== 'undefined') {
        selector = document.querySelectorAll('[data-group=' + details[i].dataset.group + ']');
        if (typeof selector[1] !== 'undefined') {
          start_event = selector[0];
          end_event = selector[1];
          selector[0].style.height = (end_event.getBoundingClientRect().top - start_event.getBoundingClientRect().top + 20) + 'px';
          //start_event.style.left = start_event.getBoundingClientRect().left + 'px';
          //start_event.style.width = (start_event.getBoundingClientRect().right - start_event.getBoundingClientRect().left) + 'px';
          start_event.children[0].style.height = 'calc(100% + 30px)';
          start_event.style.position = 'absolute';
          start_event.style.zIndex = 1;
          end_event.children[0].style.color = '#FFFFFF';
          end_event.children[0].style.position = 'relative';
          end_event.children[0].style.top = '-10px';

        }
      }
    }
  }
  window.addEventListener("load", redraw);
  window.onresize = redraw;


  function toggleColumn(column) {
    document.querySelectorAll(`section table td:nth-child(${column}), section table th:nth-child(${column})`).forEach(td => {
      td.classList.toggle('hidden');
    });
  }

  document.addEventListener("DOMContentLoaded", function(event) {
    document.querySelectorAll('.services input').forEach(link => {
      link.addEventListener("click", (e) => {
        toggleColumn(link.dataset.position);
        return false;
      });
    });
  });
</script>
